{
    "contractName": "NATR",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ckozma/dev/NATR/contracts/NATR.sol\":\"NATR\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ckozma/dev/NATR/contracts/NATR.sol\":{\"keccak256\":\"0x46e604e4ccfa41f5920f5046f91e34664db1a261454e8c0f4fa3232250d5a8ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa1b0b731f7bcb531e0e155d82dc0479fdbdd50d73a169d26a0ee997e00472e4\",\"dweb:/ipfs/Qma2huCD6vdjdHnvs9T9XBRfSUsoSNAyB8pqQXfTo6QbYe\"]},\"/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5beb2713aca05976562500789329e8c41320d00bd68ea9247856ec73894c3e3f\",\"dweb:/ipfs/QmQKwkpofsZYAzMZs7uNL7Qq58zVBuhoZCGpD6bJdUwyqy\"]},\"/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x23a373902059fb51db98e32e13f89a0ef0c570039081a1345022e66bc7e315d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9159c4e68a54684dc1032af982141b33e40f2185087a7d188d18990492a9c023\",\"dweb:/ipfs/QmNmJuhFRjcdRHKozV7kpfR2huzuzsbvr5hfsWF1sSfnuN\"]},\"/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x5ca0eb1120133a6d0799752532d4638048391823a2b623c4fe9ff46e262266fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://439a76e6c35f75a7253f1ff68c99f399094233b0ddecac6bd19093f0d18980c4\",\"dweb:/ipfs/QmYGY3jR6A4k8KWzHjGG249EWR6KtoENzdPGv6MZRFhdEW\"]},\"/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69bf7d357ce97852f4fb71045919b1bb2c0ad0c820e3f06b9dd4451b2dc5a343\",\"dweb:/ipfs/QmWt96ZviufDu2qqS7Ln6UCJjfLyoFKbo6YKn54ao3o94z\"]},\"/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a3d42f1333d4224b7e6b7914e7ef5ee6d86586a3529bd1da15cbeece0d25b3\",\"dweb:/ipfs/QmXmFqePuCWzBcz9KyBepE7joHMg8jSjcmd5iayyG7jm3y\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b50600054610100900460ff1661002c5760005460ff1615610034565b6100346100d5565b61009b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100bd576000805461ffff19166101011790555b80156100cf576000805461ff00191690555b506100f6565b60006100ea306100f060201b6105481760201c565b15905090565b3b151590565b610d96806101056000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101415780638129fc1c1461016a57806395d89b4114610174578063a457c2d71461017c578063a9059cbb1461018f578063dd62ed3e146101a257600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101db565b6040516100ce9190610a6e565b60405180910390f35b6100ea6100e5366004610adf565b61026d565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610b09565b610284565b604051601281526020016100ce565b6100ea61013c366004610adf565b610333565b6100fe61014f366004610b45565b6001600160a01b031660009081526033602052604090205490565b61017261036f565b005b6100c1610493565b6100ea61018a366004610adf565b6104a2565b6100ea61019d366004610adf565b61053b565b6100fe6101b0366004610b67565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101ea90610b9a565b80601f016020809104026020016040519081016040528092919081815260200182805461021690610b9a565b80156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b5050505050905090565b600061027a33848461054e565b5060015b92915050565b6000610291848484610672565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561031b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610328853385840361054e565b506001949350505050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161027a91859061036a908690610beb565b61054e565b600054610100900460ff1661038a5760005460ff161561038e565b303b155b6103f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610312565b600054610100900460ff16158015610413576000805461ffff19166101011790555b61045c6040518060400160405280600b81526020016a2730ba3ab932aa37b5b2b760a91b815250604051806040016040528060048152602001632720aa2960e11b815250610841565b61047e3361046c6012600a610ce7565b6104799062989680610cf6565b61087e565b8015610490576000805461ff00191690555b50565b6060603780546101ea90610b9a565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156105245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610312565b610531338585840361054e565b5060019392505050565b600061027a338484610672565b3b151590565b6001600160a01b0383166105b05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610312565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610312565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106d65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610312565b6001600160a01b0382166107385760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610312565b6001600160a01b038316600090815260336020526040902054818110156107b05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610312565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906107e7908490610beb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083391815260200190565b60405180910390a350505050565b600054610100900460ff166108685760405162461bcd60e51b815260040161031290610d15565b610870610962565b61087a828261098b565b5050565b6001600160a01b0382166108d45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610312565b80603560008282546108e69190610beb565b90915550506001600160a01b03821660009081526033602052604081208054839290610913908490610beb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b600054610100900460ff166109895760405162461bcd60e51b815260040161031290610d15565b565b600054610100900460ff166109b25760405162461bcd60e51b815260040161031290610d15565b81516109c59060369060208501906109d5565b50805161095d9060379060208401905b8280546109e190610b9a565b90600052602060002090601f016020900481019282610a035760008555610a49565b82601f10610a1c57805160ff1916838001178555610a49565b82800160010185558215610a49579182015b82811115610a49578251825591602001919060010190610a2e565b50610a55929150610a59565b5090565b5b80821115610a555760008155600101610a5a565b600060208083528351808285015260005b81811015610a9b57858101830151858201604001528201610a7f565b81811115610aad576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ada57600080fd5b919050565b60008060408385031215610af257600080fd5b610afb83610ac3565b946020939093013593505050565b600080600060608486031215610b1e57600080fd5b610b2784610ac3565b9250610b3560208501610ac3565b9150604084013590509250925092565b600060208284031215610b5757600080fd5b610b6082610ac3565b9392505050565b60008060408385031215610b7a57600080fd5b610b8383610ac3565b9150610b9160208401610ac3565b90509250929050565b600181811c90821680610bae57607f821691505b60208210811415610bcf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bfe57610bfe610bd5565b500190565b600181815b80851115610c3e578160001904821115610c2457610c24610bd5565b80851615610c3157918102915b93841c9390800290610c08565b509250929050565b600082610c555750600161027e565b81610c625750600061027e565b8160018114610c785760028114610c8257610c9e565b600191505061027e565b60ff841115610c9357610c93610bd5565b50506001821b61027e565b5060208310610133831016604e8410600b8410161715610cc1575081810a61027e565b610ccb8383610c03565b8060001904821115610cdf57610cdf610bd5565b029392505050565b6000610b6060ff841683610c46565b6000816000190483118215151615610d1057610d10610bd5565b500290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212200ea459d97d96202a9c862a9a5b2cbd97649ce4cd2ce1e6a50d4f68995986abdf64736f6c634300080b0033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101415780638129fc1c1461016a57806395d89b4114610174578063a457c2d71461017c578063a9059cbb1461018f578063dd62ed3e146101a257600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101db565b6040516100ce9190610a6e565b60405180910390f35b6100ea6100e5366004610adf565b61026d565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610b09565b610284565b604051601281526020016100ce565b6100ea61013c366004610adf565b610333565b6100fe61014f366004610b45565b6001600160a01b031660009081526033602052604090205490565b61017261036f565b005b6100c1610493565b6100ea61018a366004610adf565b6104a2565b6100ea61019d366004610adf565b61053b565b6100fe6101b0366004610b67565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101ea90610b9a565b80601f016020809104026020016040519081016040528092919081815260200182805461021690610b9a565b80156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b5050505050905090565b600061027a33848461054e565b5060015b92915050565b6000610291848484610672565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561031b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610328853385840361054e565b506001949350505050565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161027a91859061036a908690610beb565b61054e565b600054610100900460ff1661038a5760005460ff161561038e565b303b155b6103f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610312565b600054610100900460ff16158015610413576000805461ffff19166101011790555b61045c6040518060400160405280600b81526020016a2730ba3ab932aa37b5b2b760a91b815250604051806040016040528060048152602001632720aa2960e11b815250610841565b61047e3361046c6012600a610ce7565b6104799062989680610cf6565b61087e565b8015610490576000805461ff00191690555b50565b6060603780546101ea90610b9a565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156105245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610312565b610531338585840361054e565b5060019392505050565b600061027a338484610672565b3b151590565b6001600160a01b0383166105b05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610312565b6001600160a01b0382166106115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610312565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106d65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610312565b6001600160a01b0382166107385760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610312565b6001600160a01b038316600090815260336020526040902054818110156107b05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610312565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906107e7908490610beb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083391815260200190565b60405180910390a350505050565b600054610100900460ff166108685760405162461bcd60e51b815260040161031290610d15565b610870610962565b61087a828261098b565b5050565b6001600160a01b0382166108d45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610312565b80603560008282546108e69190610beb565b90915550506001600160a01b03821660009081526033602052604081208054839290610913908490610beb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b600054610100900460ff166109895760405162461bcd60e51b815260040161031290610d15565b565b600054610100900460ff166109b25760405162461bcd60e51b815260040161031290610d15565b81516109c59060369060208501906109d5565b50805161095d9060379060208401905b8280546109e190610b9a565b90600052602060002090601f016020900481019282610a035760008555610a49565b82601f10610a1c57805160ff1916838001178555610a49565b82800160010185558215610a49579182015b82811115610a49578251825591602001919060010190610a2e565b50610a55929150610a59565b5090565b5b80821115610a555760008155600101610a5a565b600060208083528351808285015260005b81811015610a9b57858101830151858201604001528201610a7f565b81811115610aad576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ada57600080fd5b919050565b60008060408385031215610af257600080fd5b610afb83610ac3565b946020939093013593505050565b600080600060608486031215610b1e57600080fd5b610b2784610ac3565b9250610b3560208501610ac3565b9150604084013590509250925092565b600060208284031215610b5757600080fd5b610b6082610ac3565b9392505050565b60008060408385031215610b7a57600080fd5b610b8383610ac3565b9150610b9160208401610ac3565b90509250929050565b600181811c90821680610bae57607f821691505b60208210811415610bcf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bfe57610bfe610bd5565b500190565b600181815b80851115610c3e578160001904821115610c2457610c24610bd5565b80851615610c3157918102915b93841c9390800290610c08565b509250929050565b600082610c555750600161027e565b81610c625750600061027e565b8160018114610c785760028114610c8257610c9e565b600191505061027e565b60ff841115610c9357610c93610bd5565b50506001821b61027e565b5060208310610133831016604e8410600b8410161715610cc1575081810a61027e565b610ccb8383610c03565b8060001904821115610cdf57610cdf610bd5565b029392505050565b6000610b6060ff841683610c46565b6000816000190483118215151615610d1057610d10610bd5565b500290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212200ea459d97d96202a9c862a9a5b2cbd97649ce4cd2ce1e6a50d4f68995986abdf64736f6c634300080b0033",
    "sourceMap": "285:294:0:-:0;;;393:28;;;;;;;;;-1:-1:-1;2347:13:1;;;;;;;:48;;2383:12;;;;2382:13;2347:48;;;2363:16;:14;:16::i;:::-;2339:107;;;;-1:-1:-1;;;2339:107:1;;216:2:7;2339:107:1;;;198:21:7;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:7;;;338:44;399:19;;2339:107:1;;;;;;;;2457:19;2480:13;;;;;;2479:14;2503:98;;;;2537:13;:20;;-1:-1:-1;;2571:19:1;;;;;2503:98;2627:14;2623:66;;;2673:5;2657:21;;-1:-1:-1;;2657:21:1;;;2623:66;2058:637;285:294:0;;3015:123:1;3063:4;3087:44;3125:4;3087:29;;;;;:44;;:::i;:::-;3086:45;3079:52;;3015:123;:::o;782:377:5:-;1098:20;1144:8;;;782:377::o;14:410:7:-;285:294:0;;;;;;",
    "deployedSourceMap": "285:294:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4611:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:7;;1211:22;1193:41;;1181:2;1166:18;4611:166:2;1053:187:7;3602:106:2;3689:12;;3602:106;;;1391:25:7;;;1379:2;1364:18;3602:106:2;1245:177:7;5244:478:2;;;;;;:::i;:::-;;:::i;3451:91::-;;;3533:2;1902:36:7;;1890:2;1875:18;3451:91:2;1760:184:7;6117:212:2;;;;;;:::i;:::-;;:::i;3766:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3866:18:2;3840:7;3866:18;;;:9;:18;;;;;;;3766:125;427:150:0;;;:::i;:::-;;2725:102:2;;;:::i;6816:405::-;;;;;;:::i;:::-;;:::i;4094:172::-;;;;;;:::i;:::-;;:::i;4324:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4439:18:2;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149;2514:98;2568:13;2600:5;2593:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:98;:::o;4611:166::-;4694:4;4710:39;965:10:6;4733:7:2;4742:6;4710:8;:39::i;:::-;-1:-1:-1;4766:4:2;4611:166;;;;;:::o;5244:478::-;5380:4;5396:36;5406:6;5414:9;5425:6;5396:9;:36::i;:::-;-1:-1:-1;;;;;5470:19:2;;5443:24;5470:19;;;:11;:19;;;;;;;;965:10:6;5470:33:2;;;;;;;;5521:26;;;;5513:79;;;;-1:-1:-1;;;5513:79:2;;2992:2:7;5513:79:2;;;2974:21:7;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:7;;;3114:38;3169:19;;5513:79:2;;;;;;;;;5626:57;5635:6;965:10:6;5676:6:2;5657:16;:25;5626:8;:57::i;:::-;-1:-1:-1;5711:4:2;;5244:478;-1:-1:-1;;;;5244:478:2:o;6117:212::-;965:10:6;6205:4:2;6253:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6253:34:2;;;;;;;;;;6205:4;;6221:80;;6244:7;;6253:47;;6290:10;;6253:47;:::i;:::-;6221:8;:80::i;427:150:0:-;2347:13:1;;;;;;;:48;;2383:12;;;;2382:13;2347:48;;;3125:4;1098:20:5;1144:8;2363:16:1;2339:107;;;;-1:-1:-1;;;2339:107:1;;3666:2:7;2339:107:1;;;3648:21:7;3705:2;3685:18;;;3678:30;3744:34;3724:18;;;3717:62;-1:-1:-1;;;3795:18:7;;;3788:44;3849:19;;2339:107:1;3464:410:7;2339:107:1;2457:19;2480:13;;;;;;2479:14;2503:98;;;;2537:13;:20;;-1:-1:-1;;2571:19:1;;;;;2503:98;478:35:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;478:35:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;478:35:0::1;;::::0;:12:::1;:35::i;:::-;524:46;530:10;553:16;3533:2:2::0;553::0::1;:16;:::i;:::-;542:27;::::0;:8:::1;:27;:::i;:::-;524:5;:46::i;:::-;2627:14:1::0;2623:66;;;2673:5;2657:21;;-1:-1:-1;;2657:21:1;;;2623:66;2058:637;427:150:0:o;2725:102:2:-;2781:13;2813:7;2806:14;;;;;:::i;6816:405::-;965:10:6;6909:4:2;6952:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6952:34:2;;;;;;;;;;7004:35;;;;6996:85;;;;-1:-1:-1;;;6996:85:2;;5637:2:7;6996:85:2;;;5619:21:7;5676:2;5656:18;;;5649:30;5715:34;5695:18;;;5688:62;-1:-1:-1;;;5766:18:7;;;5759:35;5811:19;;6996:85:2;5435:401:7;6996:85:2;7115:67;965:10:6;7138:7:2;7166:15;7147:16;:34;7115:8;:67::i;:::-;-1:-1:-1;7210:4:2;;6816:405;-1:-1:-1;;;6816:405:2:o;4094:172::-;4180:4;4196:42;965:10:6;4220:9:2;4231:6;4196:9;:42::i;782:377:5:-;1098:20;1144:8;;;782:377::o;10392:370:2:-;-1:-1:-1;;;;;10523:19:2;;10515:68;;;;-1:-1:-1;;;10515:68:2;;6043:2:7;10515:68:2;;;6025:21:7;6082:2;6062:18;;;6055:30;6121:34;6101:18;;;6094:62;-1:-1:-1;;;6172:18:7;;;6165:34;6216:19;;10515:68:2;5841:400:7;10515:68:2;-1:-1:-1;;;;;10601:21:2;;10593:68;;;;-1:-1:-1;;;10593:68:2;;6448:2:7;10593:68:2;;;6430:21:7;6487:2;6467:18;;;6460:30;6526:34;6506:18;;;6499:62;-1:-1:-1;;;6577:18:7;;;6570:32;6619:19;;10593:68:2;6246:398:7;10593:68:2;-1:-1:-1;;;;;10672:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10723:32;;1391:25:7;;;10723:32:2;;1364:18:7;10723:32:2;;;;;;;10392:370;;;:::o;7695:713::-;-1:-1:-1;;;;;7830:20:2;;7822:70;;;;-1:-1:-1;;;7822:70:2;;6851:2:7;7822:70:2;;;6833:21:7;6890:2;6870:18;;;6863:30;6929:34;6909:18;;;6902:62;-1:-1:-1;;;6980:18:7;;;6973:35;7025:19;;7822:70:2;6649:401:7;7822:70:2;-1:-1:-1;;;;;7910:23:2;;7902:71;;;;-1:-1:-1;;;7902:71:2;;7257:2:7;7902:71:2;;;7239:21:7;7296:2;7276:18;;;7269:30;7335:34;7315:18;;;7308:62;-1:-1:-1;;;7386:18:7;;;7379:33;7429:19;;7902:71:2;7055:399:7;7902:71:2;-1:-1:-1;;;;;8066:17:2;;8042:21;8066:17;;;:9;:17;;;;;;8101:23;;;;8093:74;;;;-1:-1:-1;;;8093:74:2;;7661:2:7;8093:74:2;;;7643:21:7;7700:2;7680:18;;;7673:30;7739:34;7719:18;;;7712:62;-1:-1:-1;;;7790:18:7;;;7783:36;7836:19;;8093:74:2;7459:402:7;8093:74:2;-1:-1:-1;;;;;8201:17:2;;;;;;;:9;:17;;;;;;8221:22;;;8201:42;;8263:20;;;;;;;;:30;;8237:6;;8201:17;8263:30;;8237:6;;8263:30;:::i;:::-;;;;;;;;8326:9;-1:-1:-1;;;;;8309:35:2;8318:6;-1:-1:-1;;;;;8309:35:2;;8337:6;8309:35;;;;1391:25:7;;1379:2;1364:18;;1245:177;8309:35:2;;;;;;;;7812:596;7695:713;;;:::o;2101:183::-;2930:13:1;;;;;;;2922:69;;;;-1:-1:-1;;;2922:69:1;;;;;;;:::i;:::-;2203:26:2::1;:24;:26::i;:::-;2239:38;2262:5;2269:7;2239:22;:38::i;:::-;2101:183:::0;;:::o;8684:389::-;-1:-1:-1;;;;;8767:21:2;;8759:65;;;;-1:-1:-1;;;8759:65:2;;8480:2:7;8759:65:2;;;8462:21:7;8519:2;8499:18;;;8492:30;8558:33;8538:18;;;8531:61;8609:18;;8759:65:2;8278:355:7;8759:65:2;8911:6;8895:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8927:18:2;;;;;;:9;:18;;;;;:28;;8949:6;;8927:18;:28;;8949:6;;8927:28;:::i;:::-;;;;-1:-1:-1;;8970:37:2;;1391:25:7;;;-1:-1:-1;;;;;8970:37:2;;;8987:1;;8970:37;;1379:2:7;1364:18;8970:37:2;;;;;;;2101:183;;:::o;11346:121::-;;;;:::o;812:69:6:-;2930:13:1;;;;;;;2922:69;;;;-1:-1:-1;;;2922:69:1;;;;;;;:::i;:::-;812::6:o;2290:159:2:-;2930:13:1;;;;;;;2922:69;;;;-1:-1:-1;;;2922:69:1;;;;;;;:::i;:::-;2402:13:2;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2425:17:2;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:597:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:7:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:7;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:7:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:7:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:127::-;3260:10;3255:3;3251:20;3248:1;3241:31;3291:4;3288:1;3281:15;3315:4;3312:1;3305:15;3331:128;3371:3;3402:1;3398:6;3395:1;3392:13;3389:39;;;3408:18;;:::i;:::-;-1:-1:-1;3444:9:7;;3331:128::o;3879:422::-;3968:1;4011:5;3968:1;4025:270;4046:7;4036:8;4033:21;4025:270;;;4105:4;4101:1;4097:6;4093:17;4087:4;4084:27;4081:53;;;4114:18;;:::i;:::-;4164:7;4154:8;4150:22;4147:55;;;4184:16;;;;4147:55;4263:22;;;;4223:15;;;;4025:270;;;4029:3;3879:422;;;;;:::o;4306:806::-;4355:5;4385:8;4375:80;;-1:-1:-1;4426:1:7;4440:5;;4375:80;4474:4;4464:76;;-1:-1:-1;4511:1:7;4525:5;;4464:76;4556:4;4574:1;4569:59;;;;4642:1;4637:130;;;;4549:218;;4569:59;4599:1;4590:10;;4613:5;;;4637:130;4674:3;4664:8;4661:17;4658:43;;;4681:18;;:::i;:::-;-1:-1:-1;;4737:1:7;4723:16;;4752:5;;4549:218;;4851:2;4841:8;4838:16;4832:3;4826:4;4823:13;4819:36;4813:2;4803:8;4800:16;4795:2;4789:4;4786:12;4782:35;4779:77;4776:159;;;-1:-1:-1;4888:19:7;;;4920:5;;4776:159;4967:34;4992:8;4986:4;4967:34;:::i;:::-;5037:6;5033:1;5029:6;5025:19;5016:7;5013:32;5010:58;;;5048:18;;:::i;:::-;5086:20;;4306:806;-1:-1:-1;;;4306:806:7:o;5117:140::-;5175:5;5204:47;5245:4;5235:8;5231:19;5225:4;5204:47;:::i;5262:168::-;5302:7;5368:1;5364;5360:6;5356:14;5353:1;5350:21;5345:1;5338:9;5331:17;5327:45;5324:71;;;5375:18;;:::i;:::-;-1:-1:-1;5415:9:7;;5262:168::o;7866:407::-;8068:2;8050:21;;;8107:2;8087:18;;;8080:30;8146:34;8141:2;8126:18;;8119:62;-1:-1:-1;;;8212:2:7;8197:18;;8190:41;8263:3;8248:19;;7866:407::o",
    "sourcePath": "/Users/ckozma/dev/NATR/contracts/NATR.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/Users/ckozma/dev/NATR/contracts/NATR.sol",
        "exportedSymbols": {
            "AddressUpgradeable": [
                1032
            ],
            "ContextUpgradeable": [
                1076
            ],
            "ERC20Upgradeable": [
                684
            ],
            "IERC20MetadataUpgradeable": [
                787
            ],
            "IERC20Upgradeable": [
                762
            ],
            "Initializable": [
                111
            ],
            "NATR": [
                37
            ]
        },
        "id": 38,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "file": "/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 38,
                "sourceUnit": 685,
                "src": "57:114:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "file": "/Users/ckozma/dev/NATR/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 38,
                "sourceUnit": 112,
                "src": "172:111:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "Initializable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 111,
                            "src": "302:13:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "302:13:0"
                    },
                    {
                        "baseName": {
                            "id": 6,
                            "name": "ERC20Upgradeable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 684,
                            "src": "317:16:0"
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "317:16:0"
                    }
                ],
                "canonicalName": "NATR",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 37,
                "linearizedBaseContracts": [
                    37,
                    684,
                    787,
                    762,
                    1076,
                    111
                ],
                "name": "NATR",
                "nameLocation": "294:4:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 13,
                            "nodeType": "Block",
                            "src": "419:2:0",
                            "statements": []
                        },
                        "documentation": {
                            "id": 8,
                            "nodeType": "StructuredDocumentation",
                            "src": "340:48:0",
                            "text": "@custom:oz-upgrades-unsafe-allow constructor"
                        },
                        "id": 14,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "id": 11,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 10,
                                    "name": "initializer",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 85,
                                    "src": "407:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "407:11:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 9,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "404:2:0"
                        },
                        "returnParameters": {
                            "id": 12,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "419:0:0"
                        },
                        "scope": 37,
                        "src": "393:28:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 35,
                            "nodeType": "Block",
                            "src": "468:109:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4e6174757265546f6b656e",
                                                "id": 20,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "491:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d5ee8fd3c5f6584b265d5b0813f0e0aba2b11e4095f7ca2f0c140668f3acc419",
                                                    "typeString": "literal_string \"NatureToken\""
                                                },
                                                "value": "NatureToken"
                                            },
                                            {
                                                "hexValue": "4e415452",
                                                "id": 21,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "506:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_20ee173455c0ac08707e7c6ecd5d3224cc3c13bf3757ea1f6c99b682745b542d",
                                                    "typeString": "literal_string \"NATR\""
                                                },
                                                "value": "NATR"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_d5ee8fd3c5f6584b265d5b0813f0e0aba2b11e4095f7ca2f0c140668f3acc419",
                                                    "typeString": "literal_string \"NatureToken\""
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_20ee173455c0ac08707e7c6ecd5d3224cc3c13bf3757ea1f6c99b682745b542d",
                                                    "typeString": "literal_string \"NATR\""
                                                }
                                            ],
                                            "id": 19,
                                            "name": "__ERC20_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 161,
                                            "src": "478:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 22,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "478:35:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 23,
                                    "nodeType": "ExpressionStatement",
                                    "src": "478:35:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 25,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "530:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 26,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "530:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 32,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "3130303030303030",
                                                    "id": 27,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "542:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10000000_by_1",
                                                        "typeString": "int_const 10000000"
                                                    },
                                                    "value": "10000000"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 31,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 28,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "553:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 29,
                                                            "name": "decimals",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 209,
                                                            "src": "559:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                "typeString": "function () view returns (uint8)"
                                                            }
                                                        },
                                                        "id": 30,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "559:10:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "553:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "542:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 24,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 540,
                                            "src": "524:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 33,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "524:46:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 34,
                                    "nodeType": "ExpressionStatement",
                                    "src": "524:46:0"
                                }
                            ]
                        },
                        "functionSelector": "8129fc1c",
                        "id": 36,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 17,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 16,
                                    "name": "initializer",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 85,
                                    "src": "449:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "449:11:0"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "436:10:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 15,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "446:2:0"
                        },
                        "returnParameters": {
                            "id": 18,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "468:0:0"
                        },
                        "scope": 37,
                        "src": "427:150:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 38,
                "src": "285:294:0",
                "usedErrors": []
            }
        ],
        "src": "32:548:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "initialize()": "8129fc1c",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "695600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24620",
            "balanceOf(address)": "2537",
            "decimals()": "266",
            "decreaseAllowance(address,uint256)": "26954",
            "increaseAllowance(address,uint256)": "27046",
            "initialize()": "infinite",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2326",
            "transfer(address,uint256)": "51248",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}